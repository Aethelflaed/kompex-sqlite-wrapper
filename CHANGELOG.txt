
  _   _                                            ____  _____  _         _                                          
 ( ) ( )                                          (  _ )(  _  )( )     _ ( )_           
 | |/ /   ___    ___ ___   _ _     ____           | (__ | ( ) || |    (_)| ,_)  ____    
 |   <   / _ \ /' _ ` _ `\( '_`\  / __ \(`\/')     \__ \| | | || |  _ | || |   / __ \   
 | |\ \ ( (_) )| ( ) ( ) || (_) )(  ___/ >  <    ( \_) || (('\|| |_( )| || |_ (  ___/   
 (_) (_) \___/ (_) (_) (_)| ,__/  \____)(_/\_)    \____/(___\_)(____/ (_) \__) \____)   
                          | |                                                              
                          (_)               	      	 _       _           
							( )  _  ( )         
							| | ( ) | | _ __  __ _  _ _    _ _     ____  _ __    
							| | | | | |( '__)/ _` )( '_`\ ( '_`\  / __ \( '__) 
							| (_/ \_) || |  ( (_| || (_) )| (_) )(  ___/| |           
							 \___x___/ (_)   \__,_)| ,__/ | ,__/  \____)(_)          
							                       | |    | |                           
                   							       (_)    (_)               
											       (c) 2008-2012 Sven Broeske
											      [e-mail: mail@svenbroeske.de]

 CHANGELOG
 =========

 version 1.0.0 (22.05.2010)
 - public release


 version 1.1.1 (03.06.2010)
 - added SQLiteDatabase::MoveDatabaseToMemory()
 - added SQLiteDatabase::SaveDatabaseFromMemoryToFile()
 - fixed bug in SQLiteStatement::GetTable()


 version 1.2.1 (02.07.2010)
 - added SQLiteDatabase::GetLastInsertRowId()
 - added SQLiteDatabase::GetMemoryUsage()
 - added SQLiteDatabase::GetMemoryHighwaterMark()


 version 1.3.1 (15.07.2010)
 - added SQLiteStatement::Reset()
 - added optional parameter numberOfBytes in SQLiteStatement::BindBlob()
 - added prepared statement example


 version 1.4.1 (13.08.2010)
 - added SQLiteStatement::GetNumberOfRows()
 - added SQLiteStatement::GetSqlResultString()
 - added SQLiteStatement::GetSqlResultInt()
 - added SQLiteStatement::GetSqlResultInt64()
 - added SQLiteStatement::GetSqlResultDouble()
 - added SQLiteStatement::GetSqlResultCString()
 - added SQLiteStatement::GetSqlResultString16()
 - added SQLiteStatement::GetSqlResultBlob()
 - added GetSqlResult%() example
 - added Visual Studio 2010 project files
 - updated sqlite to version 3.7.0.1
 - moved SQLITE_ENABLE_COLUMN_METADATA define from project file to sqlite3.c


 version 1.4.3 (17.10.2010)
 - fixed bug in SQLiteException class
 - moved sqlite3.h include due to compilation issues
 - added SQLITE_ENABLE_RTREE define
 - updated sqlite to version 3.7.3


 version 1.5.4 (07.02.2011)
 - added SQLiteStatement::SqlStatement(const std::wstring &sqlStatement)

 - added SQLiteStatement::Sql(const std::wstring &sql)
 - added SQLiteStatement::GetColumn%(const std::string &column) methods so that it is possible to get the result values via column name

 - added and improved out of range checks for all GetColumn%() methods
 - added GetColumn%(const std::string &column) example
 - updated sqlite to version 3.7.5


 
 version 1.5.5 (22.02.2011)
 - fixed bug in SQLiteStatement::GetSqlResultCString()
 - fixed bug in SQLiteStatement::GetSqlResultString16()
 - fixed bug in SQLiteStatement::GetSqlResultBlob()


 version 1.6.6 (16.04.2011)
 - added void SQLiteStatement::BindBool(int column, bool value)
 - added bool SQLiteStatement::GetColumnBool(int column)
 - added bool SQLiteStatement::GetColumnBool(const std::string &column)
 - added sqlite3_stmt *SQLiteStatement::GetStatementHandle()
 - added void SQLiteStatement::Execute()
   (repetitive execution of prepared INSERT/UPDATE/DELETE statements is now possible)
 - added an example for UPDATE statements
 - added an example for the repetitive execution of prepared INSERT/UPDATE/DELETE statements
 - updated sqlite to version 3.7.6.1


 version 1.7.7 (04.05.2011)
 - moved int64 and uint64 typedefs from KompexSQLiteStatement.h to KompexSQLitePrerequisites.h
 - added Kompex::SQLiteBlob class (responsible for the administration of existing BLOBs)
   - added SQLiteBlob::OpenBlob()
   - added SQLiteBlob::CloseBlob()
   - added SQLiteBlob::GetBlobSize()
   - added SQLiteBlob::ReadBlob()
   - added SQLiteBlob::WriteBlob()
   - added SQLiteBlob::GetBlobHandle()
 - added Kompex::SQLiteBlob example
 - updated sqlite to version 3.7.6.2


 version 1.7.8 (14.05.2011)
 - removed void SQLiteStatement::FreeAllStatements()
   (please use FreeQuery() instead of the removed method now)
 - fixed bug in SQLiteStatement::~SQLiteStatement() which caused that all with the database associated statements were deleted


 version 1.7.9 (02.12.2011)
 - more detailed error output in SQLiteDatabase class
 - fixed bug in SQLiteDatabase::MoveDatabaseToMemory() - it was not possible to move a database to memory if the AUTOINCREMENT feature was used
 - updated sqlite to version 3.7.9


 version 1.8.10 (31.03.2012)
 - added bool SQLiteDatabase::IsDatabaseReadOnly()
 - added void SQLiteDatabase::ReleaseMemory()
 - added static std::string Mprintf(const char *sql, ...)
 - added static std::string Vmprintf(const char *sql, va_list args)
 - fixed bug in SQLiteStatement::GetColumnString() - return of a NULL value caused an access violation
 - improved documentation
 - updated sqlite to version 3.7.11

